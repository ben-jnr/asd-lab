[{"/home/ben/Development/Web/asd-lab/src/IndustryProfile/IndustryPersonal.tsx":"1","/home/ben/Development/Web/asd-lab/src/IndustryProfile/IndustryProfile.tsx":"2","/home/ben/Development/Web/asd-lab/src/IndustryProfile/IndustrySideBar.tsx":"3","/home/ben/Development/Web/asd-lab/src/Landing/Login.tsx":"4","/home/ben/Development/Web/asd-lab/src/Navbar/LoggedIn.tsx":"5","/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminSearch.tsx":"6","/home/ben/Development/Web/asd-lab/src/Navbar/LoggedOut.tsx":"7","/home/ben/Development/Web/asd-lab/src/Navbar/AdminLoggedOut.tsx":"8","/home/ben/Development/Web/asd-lab/src/Functions/Logout.ts":"9","/home/ben/Development/Web/asd-lab/src/Functions/AdminLogin.ts":"10","/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminApprove.tsx":"11","/home/ben/Development/Web/asd-lab/src/index.tsx":"12","/home/ben/Development/Web/asd-lab/src/AdminLanding/Landing.tsx":"13","/home/ben/Development/Web/asd-lab/src/NotFound/NotFound.tsx":"14","/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminProfile.tsx":"15","/home/ben/Development/Web/asd-lab/src/Functions/Redirection.ts":"16","/home/ben/Development/Web/asd-lab/src/Landing/LandingText.tsx":"17","/home/ben/Development/Web/asd-lab/src/Landing/Register.tsx":"18","/home/ben/Development/Web/asd-lab/src/IndustryProfile/IndustrySearch.tsx":"19","/home/ben/Development/Web/asd-lab/src/AdminLanding/AdminLogin.tsx":"20","/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminSideBar.tsx":"21","/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminPersonal.tsx":"22","/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminScrap.tsx":"23","/home/ben/Development/Web/asd-lab/src/Functions/Login.ts":"24"},{"size":13966,"mtime":1607537985343,"results":"25","hashOfConfig":"26"},{"size":1048,"mtime":1607444135603,"results":"27","hashOfConfig":"26"},{"size":1039,"mtime":1607434021689,"results":"28","hashOfConfig":"26"},{"size":1566,"mtime":1607242431373,"results":"29","hashOfConfig":"26"},{"size":718,"mtime":1607259093307,"results":"30","hashOfConfig":"26"},{"size":4886,"mtime":1607524149536,"results":"31","hashOfConfig":"26"},{"size":1104,"mtime":1607198893816,"results":"32","hashOfConfig":"26"},{"size":660,"mtime":1607204477697,"results":"33","hashOfConfig":"26"},{"size":186,"mtime":1607249461467,"results":"34","hashOfConfig":"26"},{"size":584,"mtime":1607429322654,"results":"35","hashOfConfig":"26"},{"size":3895,"mtime":1607524035724,"results":"36","hashOfConfig":"26"},{"size":816,"mtime":1607432744162,"results":"37","hashOfConfig":"26"},{"size":708,"mtime":1607264423402,"results":"38","hashOfConfig":"26"},{"size":1401,"mtime":1607358037585,"results":"39","hashOfConfig":"26"},{"size":1157,"mtime":1607440870193,"results":"40","hashOfConfig":"26"},{"size":1484,"mtime":1607357948242,"results":"41","hashOfConfig":"26"},{"size":258,"mtime":1607118760840,"results":"42","hashOfConfig":"26"},{"size":2690,"mtime":1607242644706,"results":"43","hashOfConfig":"26"},{"size":4693,"mtime":1607524037068,"results":"44","hashOfConfig":"26"},{"size":1628,"mtime":1607242960543,"results":"45","hashOfConfig":"26"},{"size":1527,"mtime":1607440911053,"results":"46","hashOfConfig":"26"},{"size":1281,"mtime":1607293791036,"results":"47","hashOfConfig":"26"},{"size":9991,"mtime":1607501144062,"results":"48","hashOfConfig":"26"},{"size":567,"mtime":1607432817127,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"malgyn",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ben/Development/Web/asd-lab/src/IndustryProfile/IndustryPersonal.tsx",["107","108","109","110","111","112","113","114"],"import React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport edit from '../Images/edit.svg';\nimport del from '../Images/delete.svg';\nimport approved from '../Images/approved2.svg';\n\n\nfunction IndustryPersonal(data:any) {\n\n    \n    const [available, setAvailable] = useState([{name:\"\", type:\"\", hazard:\"\",qty:\"\",rate:\"\"}]);\n    const [scrap,setScrap] = useState([{name:\"\"}]);\n\n\n\n\n    useEffect(function() {\n        $('.IndustryAvailableSave').hide();\n\n        async function getWaste() {\n            const response = await axios.get('/industry/scrap');\n            if(typeof response.data === 'object'){\n                setScrap(response.data);\n            }\n            else {\n                console.log(response.data)\n            }\n        }\n        getWaste().then(()=>{}).catch((err)=>console.log(err));\n\n        async function getAvailable() {\n            const response = await axios.get('/industry/available');\n            if(typeof response.data === 'object'){\n                setAvailable(response.data);\n            }\n            else {\n                console.log(response.data)\n            }\n        }\n        getAvailable().then(()=>{}).catch((err)=>console.log(err));\n    },[])\n\n\n\n\n\n    useEffect(()=>{\n        $('.IndustryAvailableSave').hide();\n        for(let i=0;i<available.length;i++) {\n            $(\"#IndustryAvailableName\"+available[i].name.replace(/ /g, \"\")).val(available[i].name);\n            $(\"#IndustryAvailableType\"+available[i].name.replace(/ /g, \"\")).val(available[i].type);\n            $(\"#IndustryAvailableHazard\"+available[i].name.replace(/ /g, \"\")).val(available[i].hazard);\n            $(\"#IndustryAvailableQty\"+available[i].name.replace(/ /g, \"\")).val(available[i].qty);\n            $(\"#IndustryAvailableRate\"+available[i].name.replace(/ /g, \"\")).val(available[i].rate);\n        }\n    },[available])\n\n\n\n\n\n    async function addAvailable() {\n        if($(\"#IndustryAvailableAddSelect\").val() !== \"\" && $(\"#IndustryAvailableAddSelect\").val() !== \"choose a waste\" && $(\"#IndustryAvailableAddQty\").val() !== \"\" && $(\"#IndustryAvailableAddRate\").val() !== \"\" ) {\n            const data = {name:$(\"#IndustryAvailableAddSelect\").val(), qty:$(\"#IndustryAvailableAddQty\").val(), rate:$(\"#IndustryAvailableAddRate\").val()};\n            const response = await axios.post('/industry/available/add',data);\n            if(typeof response.data === 'object') {\n                setAvailable(response.data);\n            }\n            else {\n                console.log(response.data);\n            }\n        }\n        else {\n            console.log(\"Add available form incomplete\");\n        }\n        $('#IndustryAvailableAddQty').val(\"\");\n        $('#IndustryAvailableAddRate').val(\"\");\n    }\n\n\n\n\n\n    async function removeAvailable(record:any) {\n        const data = {name:record.name};\n        const response= await axios.post('/industry/available/delete',data);\n        if(typeof response.data === 'object') {\n            setAvailable(response.data);\n        }\n        else {\n            console.log(response.data);\n        }\n    }\n\n\n\n\n\n    async function editAvailable(record:any) {\n        $(\"#IndustryAvailableQty\"+record.name.replace(/ /g, \"\")).removeAttr(\"disabled\");\n        $(\"#IndustryAvailableRate\"+record.name.replace(/ /g, \"\")).removeAttr(\"disabled\");\n        $(\"#IndustryAvailableQty\"+record.name.replace(/ /g, \"\")).parent().css(\"background-color\",\"rgba(0,0,0,0.05)\");\n        $(\"#IndustryAvailableRate\"+record.name.replace(/ /g, \"\")).parent().css(\"background-color\",\"rgba(0,0,0,0.05)\");\n        $(\"#IndustryAvailableEdit\"+record.name.replace(/ /g, \"\")).hide();\n        $(\"#IndustryAvailableSave\"+record.name.replace(/ /g, \"\")).show();\n    }\n        \n\n\n\n\n\n    async function saveAvailable(record:any) {\n        if($(\"#IndustryAvailableQty\" + record.name.replace(/ /g, \"\")).val() !== \"\" && $(\"#IndustryAvailableRate\" + record.name.replace(/ /g, \"\")).val() !== \"\") {\n        $(\"#IndustryAvailableSave\"+record.name.replace(/ /g, \"\")).hide();\n            const data = {name: record.name, qty:$(\"#IndustryAvailableQty\" + record.name.replace(/ /g, \"\")).val(),\n                rate:$(\"#IndustryAvailableRate\" + record.name.replace(/ /g, \"\")).val()};\n            const response = await axios.post('/industry/available/update',data);\n            if(typeof response.data === 'object') {\n                setAvailable(response.data);\n            }\n            else {\n                console.log(response.data);\n            }\n        }\n        else {\n            console.log(\"fill in all the columns\")\n        }\n        $(\"#IndustryAvailableQty\"+record.name.replace(/ /g, \"\")).attr(\"disabled\",\"disabled\");\n        $(\"#IndustryAvailableRate\"+record.name.replace(/ /g, \"\")).attr(\"disabled\",\"disabled\");\n        $(\"#IndustryAvailableQty\"+record.name.replace(/ /g, \"\")).parent().css(\"background-color\",\"rgba(0,0,0,0)\");\n        $(\"#IndustryAvailableRate\"+record.name.replace(/ /g, \"\")).parent().css(\"background-color\",\"rgba(0,0,0,0)\");\n        $(\"#IndustryAvailableSave\"+record.name.replace(/ /g, \"\")).hide();\n        $(\"#IndustryAvailableEdit\"+record.name.replace(/ /g, \"\")).show();\n    }\n\n\n\n\n\n    if(available.length === 0) {\n        $(\"#IndustryPersonalAvailableTable\").hide();\n        $(\"#IndustryPersonalAvailableTableEmpty\").show();\n    }\n    else {\n        $(\"#IndustryPersonalAvailableTableEmpty\").hide();\n        $(\"#IndustryPersonalAvailableTable\").show();\n    }\n\n\n\n    const generateOptions=()=> {\n        let optionsBody:any = [];\n        scrap.map((rec)=> {\n            optionsBody.push(<option value={rec.name}>{rec.name}</option>);\n        })\n        return(\n            <select id=\"IndustryAvailableAddSelect\" className=\"browser-default IndustryAvailableAddInput\">\n                <option defaultValue=\"choose a waste\">Choose a waste</option>\n                {optionsBody}\n            </select>\n        );\n    }\n\n\n\n\n    return<>\n        <div id=\"IndustryPersonal\" className='activeWindow'>\n            <div id=\"IndustryPersonalAbout\">\n                <div className='IndustryProfileSubHeading'><strong>About</strong></div>\n                <table id=\"IndustryPersonalAboutTable\">\n                    <tbody>\n                        <tr> \n                            <td className=\"IndustryPersonalAboutTableLeft\"><strong>ID</strong></td>  \n                            <td><strong>:</strong></td>  \n                            <td className=\"IndustryPersonalAboutTableRight\"><strong>{data.data.id}</strong></td> </tr>\n                        <tr> \n                            <td className=\"IndustryPersonalAboutTableLeft\"><strong>Username</strong></td>\n                            <td><strong>:</strong></td>  \n                            <td className=\"IndustryPersonalAboutTableRight\"><strong>@{data.data.username}</strong></td> \n                        </tr>\n                        <tr> \n                            <td className=\"IndustryPersonalAboutTableLeft\"><strong>Name</strong></td>  \n                            <td><strong>:</strong></td>  \n                            <td className=\"IndustryPersonalAboutTableRight\"><strong>{data.data.name}</strong></td> \n                        </tr>\n                        <tr> \n                            <td className=\"IndustryPersonalAboutTableLeft\"><strong>Location</strong></td>  \n                            <td><strong>:</strong></td>  \n                            <td className=\"IndustryPersonalAboutTableRight\"><strong>{data.data.location}</strong></td> \n                        </tr>\n                        <tr> \n                            <td className=\"IndustryPersonalAboutTableLeft\"><strong>Contact</strong></td>  \n                            <td><strong>:</strong></td>  \n                            <td className=\"IndustryPersonalAboutTableRight\"><strong>{data.data.contact}</strong></td> \n                        </tr>\n                    </tbody>    \n                </table>\n\n                <div className='IndustryProfileSubHeading AddAvailableSubHeading'><strong>Add Availability</strong></div>\n                <table id=\"IndustryAvailableAddTable\">\n                    <tbody>\n                        <tr>\n                            <td>\n                                {generateOptions()}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className = \"IndustryAvailableAddTd\">\n                                <div className=\"input-field col s6\">\n                                    <input placeholder=\"Quantity*\" id=\"IndustryAvailableAddQty\" className=\"IndustryAvailableAddInput\" type=\"text\"/>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className = \"IndustryAvailableAddTd\">\n                                <div className=\"input-field col s6 \">\n                                    <input placeholder=\"Rate*\" id=\"IndustryAvailableAddRate\" className=\"IndustryAvailableAddInput\" type=\"text\"/>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className = \"IndustryAvailableAddTd\">\n                                <a id=\"IndustryAvailableAddBtn\" className=\"waves-effect waves-light btn\" onClick={addAvailable}>Go</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                        </tr>\n                    </tbody>    \n                </table>\n\n            </div>\n\n\n            <div id=\"IndustryPersonalAvailable\">\n                <div className='IndustryProfileSubHeading'><strong>Available Scrap</strong></div>\n                <table id=\"IndustryPersonalAvailableTable\">\n                    <thead>\n                        <tr>\n                            <td className = \"IndustryAvailableTableHeadTd\">Name</td>\n                            <td className = \"IndustryAvailableTableHeadTd\">Type</td>\n                            <td className = \"IndustryAvailableTableHeadTd\">Hazard</td>\n                            <td className = \"IndustryAvailableTableHeadTd\">Quantity</td>\n                            <td className = \"IndustryAvailableTableHeadTd\">Rate</td>\n                            <td className = \"IndustryAvailableTableHeadTdBtn\">Edit</td>\n                            <td className = \"IndustryAvailableTableHeadTdBtn\">Delete</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {available.map((record)=>(\n                        <tr key={record.name}>\n                            <td className = \"IndustryAvailableTableTd\">\n                                <div>\n                                    <input disabled className=\"IndustryAvailableTableInput\" id={\"IndustryAvailableName\" + record.name.replace(/ /g, \"\")} type=\"text\"/>\n                                </div>\n                            </td>\n                            <td className = \"IndustryAvailableTableTd\">\n                                <div>\n                                    <input disabled className=\"IndustryAvailableTableInput\" id={\"IndustryAvailableType\" + record.name.replace(/ /g, \"\")} type=\"text\"/>\n                                </div>\n                            </td>\n                            <td className = \"IndustryAvailableTableTd\">\n                                <div>\n                                    <input disabled className=\"IndustryAvailableTableInput\" id={\"IndustryAvailableHazard\" + record.name.replace(/ /g, \"\")} type=\"text\"/>\n                                </div>\n                            </td>\n                            <td className = \"IndustryAvailableTableTd\">\n                                <div>\n                                    <input disabled className=\"IndustryAvailableTableInput\" id={\"IndustryAvailableQty\" + record.name.replace(/ /g, \"\")} type=\"text\"/>\n                                </div>\n                            </td>\n                            <td className = \"IndustryAvailableTableTd\">\n                                <div>\n                                    <input disabled className=\"IndustryAvailableTableInput\" id={\"IndustryAvailableRate\" + record.name.replace(/ /g, \"\")} type=\"text\"/>\n                                </div>\n                            </td>\n                            <td className = \"IndustryAvailableTableTdBtn\">\n                                <a className=\"IndustryAvailableBtn IndustryAvailableEdit waves-effect waves-light btn IndustryAvailableTableInput\" id={\"IndustryAvailableEdit\" + record.name.replace(/ /g, \"\")} onClick={()=>editAvailable(record)}>\n                                    <img src={edit}/>\n                                </a>\n                                <a className=\"IndustryAvailableBtn IndustryAvailableSave waves-effect waves-light btn IndustryAvailableTableInput\" id={\"IndustryAvailableSave\" + record.name.replace(/ /g, \"\")} onClick={()=>saveAvailable(record)}>\n                                    <img src={approved}/>\n                                </a>\n                            </td>\n                            <td className = \"IndustryAvailableTableTdBtn\">\n                                <a className=\"IndustryAvailableBtn IndustryAvailableDel waves-effect waves-light btn IndustryAvailableTableInput\" id={\"IndustryAvailableDel\" + record.name.replace(/ /g, \"\")} onClick={()=>removeAvailable(record)}>\n                                    <img src={del}/>\n                                </a>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                <div id=\"IndustryPersonalAvailableTableEmpty\">\n                    Nothing to show\n                </div>\n            </div>\n        </div>\n    </>\n}\n\nexport default IndustryPersonal;",["115","116"],"/home/ben/Development/Web/asd-lab/src/IndustryProfile/IndustryProfile.tsx",[],["117","118"],"/home/ben/Development/Web/asd-lab/src/IndustryProfile/IndustrySideBar.tsx",["119","120"],"import React from 'react';\nimport '../Styles/SideBar/IndustrySideBar.css';\nimport profileImg from '../Images/profile.svg';\nimport searchImg from '../Images/search.svg';\nimport $ from 'jquery';\n\n\nconst changeActive = (id:string, windowID:string) => {\n    $(\".activeBar\").removeClass('activeBar');\n    $(\"#\" + id).addClass('activeBar');\n    $(\".activeWindow\").removeClass('activeWindow');\n    $(\"#\" + windowID).addClass('activeWindow');\n}\n\nfunction IndustrySideBar() {\n    return<>\n        <div id=\"IndustrySideBar\">\n            <div id=\"IndustryProfileImgDiv\" className=\"SideBarDiv activeBar\" onClick = {() => changeActive(\"IndustryProfileImgDiv\", \"IndustryPersonal\")}>\n                <img id=\"IndustryProfileImg\" src={profileImg}></img>\n            </div>\n            <div id=\"IndustrySearchImgDiv\" className=\"SideBarDiv\" onClick = {() => changeActive(\"IndustrySearchImgDiv\",\"IndustrySearch\")}>\n                <img id=\"IndustrySearchImg\" src={searchImg}></img>\n            </div>\n        </div>\n    </>\n}\n\nexport default IndustrySideBar;","/home/ben/Development/Web/asd-lab/src/Landing/Login.tsx",["121","122"],"import React from 'react'\nimport login from '../Functions/Login';\n\nfunction Login() {\n    return<>\n        <div className=\"modal fade\" id=\"LoginModal\" aria-labelledby=\"LoginModalLabel\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">    \n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"LoginModalLabel\">Login</h5>\n              </div>\n              <div className=\"modal-body\">\n                <form id=\"LoginForm\" className=\"col s12\">\n                  <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                      <input id=\"LoginUsername\" type=\"text\"/>\n                      <label htmlFor=\"LoginUsername\">Username*</label>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                      <input id=\"LoginPassword\" type=\"password\"/>\n                      <label htmlFor=\"LoginPassword\">Password*</label>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <a id=\"LoginBtnClose\" className=\"waves-effect waves-light btn\" data-dismiss=\"modal\">Close</a>\n                <a id=\"LoginBtn\" className=\"waves-effect waves-light btn\" onClick = {() => login().then(()=>{}).catch((err)=>console.log(err))}>Submit</a>\n              </div>\n            </div>\n          </div>\n        </div>\n    </>\n}\n\nexport default Login;","/home/ben/Development/Web/asd-lab/src/Navbar/LoggedIn.tsx",["123"],"/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminSearch.tsx",["124"],"import React, {useState} from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\n\n\n\n\nfunction AdminSearch(data:any) {\n\n    const [search, setSearch] = useState([{id:\"\",username:\"\",name:\"\",location:\"\",contact:\"\"}]);\n\n\n    const criteriaChange = (data:any) => {\n        $(\"#AdminSearchQuery\").val(\"\");\n        $(\"#AdminSearchQuery\").removeAttr(\"disabled\");\n        $(\"#AdminSearchResultTable\").hide();\n        $(\"#AdminSearchResultTableEmpty\").show();\n        if($(\"#AdminSearchSelect\").val() === \"scrap\")\n            $(\"#AdminSearchQuery\").attr(\"placeholder\",\"enter scrap\");\n        else if($(\"#AdminSearchSelect\").val() === \"name\")\n            $(\"#AdminSearchQuery\").attr(\"placeholder\",\"enter name\");    \n        else if($(\"#AdminSearchSelect\").val() === \"location\")\n            $(\"#AdminSearchQuery\").attr(\"placeholder\",\"enter location\");\n        else if($(\"#AdminSearchSelect\").val() === \"your approvals\") {\n            $(\"#AdminSearchQuery\").val(data.data.id);\n            $(\"#AdminSearchQuery\").attr(\"disabled\", \"disabled\");\n        }\n        else {\n            $(\"#AdminSearchQuery\").attr(\"placeholder\",\"select an option\");\n            $(\"#AdminSearchQuery\").attr(\"disabled\", \"disabled\");\n        }\n    }\n    \n\n\n    async function submitAdminSearch(){\n        if($(\"#AdminSearchSelect\").val() === \"Choose your option\")\n            console.log(\"select criteria incomplete\");\n        else {\n            data = {criteria: $(\"#AdminSearchSelect\").val() , query: $(\"#AdminSearchQuery\").val()};\n            const response = await axios.post(\"/admin/search\",data); \n            if(typeof response.data === 'object') {\n                setSearch(response.data);\n                if(response.data.length !== 0) {\n                    $(\"#AdminSearchResultTable\").show();\n                    $(\"#AdminSearchResultTableEmpty\").hide();\n                }\n            }\n            else {\n                setSearch([]);\n                console.log(response.data);\n            }\n        }\n    }\n\n\n\n    if(search.length === 0) {\n        $(\"#AdminSearchResultTable\").hide();\n        $(\"#AdminSearchResultTableEmpty\").show();\n    }\n    \n\n\n    const generateBody=()=> {\n        if(search.length === 0) {\n            return(<tbody></tbody>)\n        }\n        else {\n            return(\n                <tbody>\n                    {search.map((record)=>(\n                            <tr key={record.id}>\n                            <td>{record.id}</td>\n                            <td>{record.username}</td>\n                            <td>{record.name}</td>\n                            <td>{record.location}</td>\n                            <td>{record.contact}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            )\n        }\n    }\n\n    return<>\n        <div id=\"AdminSearch\">\n            <table id=\"AdminSearchTable\">\n                <tbody>\n                    <tr className=\"NoBorder\">\n                        <td><strong>Search Criteria</strong></td>\n                        <td><strong>:</strong></td>\n                        <td>\n                            <select id=\"AdminSearchSelect\" onChange={() => criteriaChange(data)} className=\"browser-default\">\n                                <option defaultValue=\"\">Choose your option</option>\n                                <option value=\"name\">Name</option>\n                                <option value=\"scrap\">Scrap</option>\n                                <option value=\"location\">Location</option>\n                                <option value=\"your approvals\">Your Approvals</option>\n                            </select>\n                        </td>\n                        <td><strong>:</strong></td>\n                        <td>\n                            <div className=\"input-field col s6\">\n                                <input disabled placeholder=\"select an option\" id=\"AdminSearchQuery\" type=\"text\"/>\n                            </div>\n                        </td>\n                        <td>\n                            <a id=\"AdminSearchBtn\" className=\"waves-effect waves-light btn\" onClick={submitAdminSearch}>Go</a>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <table id=\"AdminSearchResultTable\">\n                <thead>\n                    <tr>\n                        <td><strong>ID</strong></td>\n                        <td><strong>Username</strong></td>\n                        <td><strong>Name</strong></td>\n                        <td><strong>Location</strong></td>\n                        <td><strong>Contact</strong></td>\n                    </tr>\n                </thead>\n                {generateBody()}\n            </table>\n            \n            <div id=\"AdminSearchResultTableEmpty\">\n                Nothing to Show\n            </div>\n        </div>\n    </>\n}\n\nexport default AdminSearch;","/home/ben/Development/Web/asd-lab/src/Navbar/LoggedOut.tsx",["125","126"],"import React from 'react';\nimport '../Styles/Navbar/LoggedOut.css';\nimport '../Styles/Navbar/Navbar.css';\nimport Logo from '../Images/logo.png';\nimport $ from 'jquery';\n\n\nconst closeRegModal = () => {\n    $('#RegModal').removeClass(\"show\");\n    $('.modal-backdrop').css('display','none');\n}\n\nconst closeLoginModal = () => {\n    $('#LoginModal').removeClass(\"show\");\n    $('.modal-backdrop').css('display','none');\n}\n\n\nfunction LoggedOut() {\n    return<>\n        <nav id=\"Navbar\">\n            <div className=\"nav-wrapper\">\n            <a href=\"/\" className=\"brand-logo\"><img alt='logo' id=\"Logo\" src={Logo}></img></a>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                <a id=\"NavbarRegBtn\" className=\"waves-effect waves-light btn\" data-toggle=\"modal\" data-target=\"#RegModal\" onClick = {closeLoginModal}>Register</a>\n                <a id=\"NavbarLoginBtn\" className=\"waves-effect waves-light btn\" data-toggle=\"modal\" data-target=\"#LoginModal\" onClick = {closeRegModal}>Login</a>\n            </ul>\n            </div>\n        </nav>\n    </>;\n}\n\n\nexport default LoggedOut;","/home/ben/Development/Web/asd-lab/src/Navbar/AdminLoggedOut.tsx",["127"],"import React from 'react';\nimport '../Styles/Navbar/LoggedOut.css';\nimport '../Styles/Navbar/Navbar.css';\nimport Logo from '../Images/logo.png';\n\n\nfunction LoggedOut() {\n    return<>\n        <nav id=\"Navbar\">\n            <div className=\"nav-wrapper\">\n            <a href=\"/\" className=\"brand-logo\"><img alt='logo' id=\"Logo\" src={Logo}></img></a>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                <a id=\"AdminNavbarLoginBtn\" className=\"waves-effect waves-light btn\" data-toggle=\"modal\" data-target=\"#AdminLoginModal\">Admin Login</a>\n            </ul>\n            </div>\n        </nav>\n    </>;\n}\n\n\nexport default LoggedOut;","/home/ben/Development/Web/asd-lab/src/Functions/Logout.ts",[],"/home/ben/Development/Web/asd-lab/src/Functions/AdminLogin.ts",[],"/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminApprove.tsx",["128","129","130","131"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport approved from '../Images/approved2.svg';\nimport $ from 'jquery';\nimport reject from '../Images/reject.svg';\n\n\n\nfunction AdminApprove() {\n    \n    const [pending, setPending] = useState([{id:\"\",username:\"\",name:\"\",location:\"\",contact:\"\"}]);\n    \n\n    useEffect(()=> {\n        async function getPending() {\n            const response = await axios.get('/admin/pending');\n            if(typeof response.data === 'object')\n                setPending(response.data);\n            else if(typeof response.data === 'string')\n                console.log(response.data);\n        }\n        getPending().then(()=>{}).catch((err)=>console.log(err));\n    },[])\n\n\n    \n    async function approveUser(userID:any) {\n        const data = {id:userID};\n        const response = await axios.post(\"/admin/approve\",data);\n        if(typeof response.data === 'object') {\n            var pendingCopy = [];\n            for(let i=0;i<pending.length;i++) {\n                if(pending[i].id !== userID)\n                    pendingCopy.push(pending[i]);\n            }\n            setPending(pendingCopy);\n        }\n        else\n            console.log(response.data);\n    }\n\n\n\n    async function rejectUser(userID:any) {\n        const data = {id:userID};\n        const response = await axios.post(\"/admin/reject\",data);\n        if(typeof response.data === 'object') {\n            var pendingCopy = [];\n            for(let i=0;i<pending.length;i++) {\n                if(pending[i].id !== userID)\n                    pendingCopy.push(pending[i]);\n            }\n            setPending(pendingCopy);\n        }\n        else\n            console.log(response.data);\n    }\n\n\n\n\n    if(pending.length === 0) {\n        $(\"#AdminApproveTable\").css(\"display\",\"none\");\n        $(\"#AdminApproveTableEmpty\").css(\"display\",\"block\");\n    }\n\n    return<>\n        <div id=\"AdminApprove\">\n            <div className='AdminProfileSubHeading'><strong>Pending Approvals</strong></div>\n            <table id=\"AdminApproveTable\">\n                <thead>\n                    <tr>\n                        <td className='AdminApproveTd'><strong>ID</strong></td>\n                        <td className='AdminApproveTd'><strong>Username</strong></td>\n                        <td className='AdminApproveTd'><strong>Name</strong></td>\n                        <td className='AdminApproveTd'><strong>Location</strong></td>\n                        <td className='AdminApproveTd'><strong>Contact</strong></td>\n                        <td className='AdminApproveBtnTd'><strong>Approve</strong></td>\n                        <td className='AdminApproveBtnTd'><strong>Reject</strong></td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {pending.map((record)=>(\n                        <tr key={record.id}>\n                            <td className='AdminApproveTd'>{record.id}</td>\n                            <td className='AdminApproveTd'>{record.username}</td>\n                            <td className='AdminApproveTd'>{record.name}</td>\n                            <td className='AdminApproveTd'>{record.location}</td>\n                            <td className='AdminApproveTd'>{record.contact}</td>\n                            <td className='AdminApproveBtnTd'><a className=\"AdminApproveBtn waves-effect waves-light btn\" onClick={()=>approveUser(record.id)}><img src={approved}/></a></td>\n                            <td className='AdminApproveBtnTd'><a className=\"AdminApproveBtn waves-effect waves-light btn\" onClick={()=>rejectUser(record.id)}><img src={reject}/></a></td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <div id=\"AdminApproveTableEmpty\">\n                Nothing to Show\n            </div>\n        </div>\n    </>\n}\n\nexport default AdminApprove;","/home/ben/Development/Web/asd-lab/src/index.tsx",[],"/home/ben/Development/Web/asd-lab/src/AdminLanding/Landing.tsx",[],"/home/ben/Development/Web/asd-lab/src/NotFound/NotFound.tsx",[],"/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminProfile.tsx",[],"/home/ben/Development/Web/asd-lab/src/Functions/Redirection.ts",[],"/home/ben/Development/Web/asd-lab/src/Landing/LandingText.tsx",[],"/home/ben/Development/Web/asd-lab/src/Landing/Register.tsx",["132","133"],"/home/ben/Development/Web/asd-lab/src/IndustryProfile/IndustrySearch.tsx",["134"],"/home/ben/Development/Web/asd-lab/src/AdminLanding/AdminLogin.tsx",["135","136"],"/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminSideBar.tsx",["137","138","139","140"],"/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminPersonal.tsx",[],"/home/ben/Development/Web/asd-lab/src/AdminProfile/AdminScrap.tsx",["141","142","143","144","145","146","147","148","149"],"/home/ben/Development/Web/asd-lab/src/Functions/Login.ts",[],{"ruleId":"150","severity":1,"message":"151","line":155,"column":24,"nodeType":"152","messageId":"153","endLine":155,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":226,"column":33,"nodeType":"156","endLine":226,"endColumn":129},{"ruleId":"154","severity":1,"message":"155","line":281,"column":33,"nodeType":"156","endLine":281,"endColumn":245},{"ruleId":"157","severity":1,"message":"158","line":282,"column":37,"nodeType":"156","endLine":282,"endColumn":54},{"ruleId":"154","severity":1,"message":"155","line":284,"column":33,"nodeType":"156","endLine":284,"endColumn":245},{"ruleId":"157","severity":1,"message":"158","line":285,"column":37,"nodeType":"156","endLine":285,"endColumn":58},{"ruleId":"154","severity":1,"message":"155","line":289,"column":33,"nodeType":"156","endLine":289,"endColumn":245},{"ruleId":"157","severity":1,"message":"158","line":290,"column":37,"nodeType":"156","endLine":290,"endColumn":53},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"163"},{"ruleId":"161","replacedBy":"164"},{"ruleId":"157","severity":1,"message":"158","line":19,"column":17,"nodeType":"156","endLine":19,"endColumn":63},{"ruleId":"157","severity":1,"message":"158","line":22,"column":17,"nodeType":"156","endLine":22,"endColumn":61},{"ruleId":"154","severity":1,"message":"155","line":29,"column":17,"nodeType":"156","endLine":29,"endColumn":101},{"ruleId":"154","severity":1,"message":"155","line":30,"column":17,"nodeType":"156","endLine":30,"endColumn":145},{"ruleId":"154","severity":1,"message":"155","line":14,"column":21,"nodeType":"156","endLine":14,"endColumn":150},{"ruleId":"154","severity":1,"message":"155","line":109,"column":29,"nodeType":"156","endLine":109,"endColumn":121},{"ruleId":"154","severity":1,"message":"155","line":25,"column":17,"nodeType":"156","endLine":25,"endColumn":151},{"ruleId":"154","severity":1,"message":"155","line":26,"column":17,"nodeType":"156","endLine":26,"endColumn":153},{"ruleId":"154","severity":1,"message":"155","line":13,"column":17,"nodeType":"156","endLine":13,"endColumn":137},{"ruleId":"154","severity":1,"message":"155","line":90,"column":63,"nodeType":"156","endLine":90,"endColumn":160},{"ruleId":"157","severity":1,"message":"158","line":90,"column":160,"nodeType":"156","endLine":90,"endColumn":181},{"ruleId":"154","severity":1,"message":"155","line":91,"column":63,"nodeType":"156","endLine":91,"endColumn":159},{"ruleId":"157","severity":1,"message":"158","line":91,"column":159,"nodeType":"156","endLine":91,"endColumn":178},{"ruleId":"154","severity":1,"message":"155","line":56,"column":17,"nodeType":"156","endLine":56,"endColumn":99},{"ruleId":"154","severity":1,"message":"155","line":57,"column":17,"nodeType":"156","endLine":57,"endColumn":141},{"ruleId":"154","severity":1,"message":"155","line":104,"column":29,"nodeType":"156","endLine":104,"endColumn":127},{"ruleId":"154","severity":1,"message":"155","line":30,"column":17,"nodeType":"156","endLine":30,"endColumn":106},{"ruleId":"154","severity":1,"message":"155","line":31,"column":17,"nodeType":"156","endLine":31,"endColumn":150},{"ruleId":"157","severity":1,"message":"158","line":21,"column":17,"nodeType":"156","endLine":21,"endColumn":60},{"ruleId":"157","severity":1,"message":"158","line":24,"column":17,"nodeType":"156","endLine":24,"endColumn":58},{"ruleId":"157","severity":1,"message":"158","line":27,"column":17,"nodeType":"156","endLine":27,"endColumn":62},{"ruleId":"157","severity":1,"message":"158","line":30,"column":17,"nodeType":"156","endLine":30,"endColumn":56},{"ruleId":"165","severity":1,"message":"166","line":27,"column":82,"nodeType":"167","messageId":"168","endLine":27,"endColumn":84},{"ruleId":"165","severity":1,"message":"166","line":27,"column":123,"nodeType":"167","messageId":"168","endLine":27,"endColumn":125},{"ruleId":"154","severity":1,"message":"155","line":160,"column":33,"nodeType":"156","endLine":160,"endColumn":118},{"ruleId":"154","severity":1,"message":"155","line":207,"column":37,"nodeType":"156","endLine":207,"endColumn":197},{"ruleId":"157","severity":1,"message":"158","line":208,"column":41,"nodeType":"156","endLine":208,"endColumn":58},{"ruleId":"154","severity":1,"message":"155","line":210,"column":37,"nodeType":"156","endLine":210,"endColumn":197},{"ruleId":"157","severity":1,"message":"158","line":211,"column":41,"nodeType":"156","endLine":211,"endColumn":62},{"ruleId":"154","severity":1,"message":"155","line":215,"column":37,"nodeType":"156","endLine":215,"endColumn":197},{"ruleId":"157","severity":1,"message":"158","line":216,"column":41,"nodeType":"156","endLine":216,"endColumn":57},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["169"],"no-negated-in-lhs",["170"],["169"],["170"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]